{"version":3,"sources":["context/validacion/alertaContext.js","context/autenticacion/authContext.js","components/auth/Login.js","components/auth/Register.js","context/proyectos/proyectoContext.js","components/proyectos/NuevoProyecto.js","context/tareas/tareaContext.js","components/proyectos/Proyecto.js","components/proyectos/ListadoProyectos.js","components/layout/Sidebar.js","components/layout/Barra.js","components/tareas/FormTarea.js","components/tareas/Tarea.js","components/tareas/ListadoTareas.js","components/proyectos/Proyectos.js","components/ruta/RutaPrivada.js","context/proyectos/proyectoReducer.js","types/index.js","config/axios.js","context/proyectos/proyectoState.js","context/tareas/tareaReducer.js","context/tareas/tareaState.js","context/validacion/alertaReducer.js","context/validacion/alertaState.js","context/autenticacion/authReducer.js","config/tokenAuth.js","context/autenticacion/authState.js","App.js","serviceWorker.js","index.js"],"names":["alertaContext","createContext","authContext","Login","props","useContext","AlertaContext","alerta","mostrarAlerta","AuthContext","mensaje","autenticado","iniciarSesion","useEffect","history","push","msg","categoria","useState","email","password","usuario","guardarUsuario","onChange","e","target","name","value","animationIn","animationOut","isVisible","className","onSubmit","preventDefault","trim","htmlFor","type","id","placeholder","to","Register","registrarUsuario","nombre","confirmar","length","proyectoContext","NuevoProyecto","proyectosContext","ProyectoContext","formulario","errorformulario","mostrarFormulario","agregarProyecto","mostrarError","proyecto","guardarProyecto","onClick","TareaContext","Proyecto","proyectoActual","obtenerTareas","_id","ListadoProyectos","proyectos","obtenerProyectos","AlertaConext","TransitionGroup","map","CSSTransition","key","timeout","classNames","Sidebar","Barra","AuthConext","usuarioAutenticado","cerrarSesion","FormTarea","tareaContext","tareaseleccionada","errortarea","agregarTarea","validarTarea","actualizarTarea","limpiarTarea","guardarTarea","tarea","Tarea","eliminarTarea","guardarTareaActual","cambiarEstado","estado","seleccionarTarea","ListadoTareas","eliminarProyecto","tareasproyecto","Proyectos","RutaPrivada","Component","component","authConext","cargando","render","state","action","payload","filter","clienteAxios","axios","create","baseURL","process","ProyectoState","useReducer","proyectoReducer","dispatch","a","get","resultado","console","log","data","post","proyectoId","delete","Provider","children","TareaState","TareaReducer","params","tareas","response","put","AlertaState","alertaReducer","setTimeout","localStorage","setItem","removeItem","token","tokenAuth","defaults","headers","common","AuthState","initialState","getItem","AuthReducer","datos","respuesta","App","basename","window","location","pathname","exact","path","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0ea64a59.chunk.js","sourcesContent":["import {createContext} from 'react';\r\n\r\nconst alertaContext = createContext();\r\n\r\nexport default alertaContext;\r\n\r\n","import {createContext} from 'react';\r\n\r\nconst authContext = createContext();\r\n\r\nexport default authContext;","import React,{useState, useContext, useEffect} from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport {Animated} from \"react-animated-css\";\r\nimport AlertaContext from '../../context/validacion/alertaContext';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\n\r\n\r\nconst Login = (props) =>{\r\n\r\n    //extraer los valores del context\r\n    const alertaContext = useContext(AlertaContext);\r\n    const {alerta , mostrarAlerta} = alertaContext;\r\n\r\n    //Extraer valores del context auth\r\n    const authContext = useContext(AuthContext);\r\n    const {mensaje, autenticado, iniciarSesion} = authContext;\r\n\r\n    useEffect(()=>{\r\n         if(autenticado){\r\n            props.history.push('/proyectos');\r\n\r\n         }\r\n        if(mensaje){\r\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n\r\n        }\r\n        //eslint-disable-next-line\r\n    }, [mensaje, autenticado, props.history])\r\n\r\n    //Definir el state para iniciar sesión\r\n    const [usuario, guardarUsuario] = useState({\r\n        email:'',\r\n        password:''\r\n    });\r\n\r\n    //Extraer de Usuario\r\n    const {email, password} = usuario;\r\n    const onChange = e =>{\r\n        // Con esto se guarda en el state\r\n        guardarUsuario({\r\n            ...usuario,\r\n            [e.target.name] : e.target.value\r\n        });\r\n    }\r\n\r\n    //Cuando el usuario quiere iniciar sesión\r\n    const onSubmit = e =>{\r\n        e.preventDefault();\r\n\r\n        //Validar que no hayan campos vacios\r\n        if(email.trim() === '' || password.trim() === ''){\r\n            mostrarAlerta('Todos los campos son obligatorios', 'aleta alerta-error');\r\n            return;\r\n        }\r\n        //Pasarlo al action\r\n        iniciarSesion({email, password});\r\n    }\r\n\r\n    return(\r\n        <Animated animationIn=\"bounceInLeft\" animationOut=\"fadeOut\" isVisible={true}>\r\n        <div className=\"form-usuario\">\r\n        {alerta ? (<div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>) :null }\r\n            <div className=\"contenedor-form sombra-dark\">\r\n                <h1>Iniciar Sesión</h1>\r\n                <i className=\"fas fa-user login-icons\"></i>\r\n\r\n                <form\r\n                    onSubmit={onSubmit}\r\n                >\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"email\">Email<i className=\"fas fa-at\"></i></label>\r\n                        <input \r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        placeholder=\"Tu email\"\r\n                        onChange={onChange}\r\n                        >\r\n                        </input>\r\n                    </div>\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"password\">Password <i className=\"fas fa-lock\"></i></label>\r\n                        <input \r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        value={password}\r\n                        name=\"password\"\r\n                        placeholder=\"Tu password\"\r\n                        onChange={onChange}\r\n                        >\r\n                        </input>\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <input type=\"submit\" className=\" btn btn-primario- btn-block\"\r\n                        value=\"Iniciar Sesión\"\r\n                        >\r\n                        \r\n                        \r\n                        </input>\r\n                    </div>\r\n\r\n                </form>\r\n\r\n                <Link to={'/register'} className=\"enlace-cuenta\">\r\n                    Registrate uwu\r\n                </Link>\r\n\r\n            </div>\r\n        </div>\r\n\r\n        </Animated>\r\n    );\r\n}\r\n\r\nexport default Login;","import React,{useState, useContext, useEffect} from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport {Animated} from \"react-animated-css\";\r\nimport AlertaContext from '../../context/validacion/alertaContext';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\nconst Register = (props) =>{\r\n\r\n    //extraer los valores del context\r\n    const alertaContext = useContext(AlertaContext);\r\n    const {alerta , mostrarAlerta} = alertaContext;\r\n\r\n    //Extraer valores del context auth\r\n    const authContext = useContext(AuthContext);\r\n    const {mensaje, autenticado, registrarUsuario} = authContext;\r\n    \r\n    //Encaso de autenticado o duplicado\r\n    useEffect(()=>{\r\n        if(autenticado){\r\n            props.history.push('/proyectos');\r\n\r\n        }\r\n        if(mensaje){\r\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n\r\n        }\r\n        //eslint-disable-next-line\r\n    }, [mensaje, autenticado, props.history])\r\n    \r\n    //Definir el state para iniciar sesión\r\n    const [usuario, guardarUsuario] = useState({\r\n        nombre:'',\r\n        email:'',\r\n        password:'',\r\n        confirmar:''\r\n    });\r\n\r\n    //Extraer de Usuario\r\n    const {nombre, email, password, confirmar} = usuario;\r\n    const onChange = e =>{\r\n        // Con esto se guarda en el state\r\n        guardarUsuario({\r\n            ...usuario,\r\n            [e.target.name] : e.target.value\r\n        });\r\n    }\r\n\r\n    //Cuando el usuario quiere iniciar sesión\r\n    const onSubmit = e =>{\r\n        e.preventDefault();\r\n\r\n        //Validar que no hayan campos vacios\r\n        if(nombre === '' || password === '' || email === '' || confirmar === ''){\r\n            mostrarAlerta('Todos los campos son obligatorios', 'alerta-error');\r\n            return;\r\n        }\r\n\r\n        //Password mínimo de 6 caracteres\r\n        if(password.length < 6){\r\n            mostrarAlerta('La contraseña debe de ser mínimo de 6 caracteres', 'alerta-error');\r\n            return;\r\n        }\r\n        //Revisar 2 passwords\r\n        if(password !== confirmar){\r\n            mostrarAlerta('Las contraseñas no son iguales', 'alerta-error')\r\n            return;\r\n        }\r\n        //Pasarlo al action\r\n        registrarUsuario({\r\n            nombre,\r\n            email,\r\n            password\r\n        })\r\n    }\r\n\r\n    return(\r\n        <Animated animationIn=\"bounceInRight\" animationOut=\"fadeOut\" isVisible={true}>\r\n        <div className=\"form-usuario\">\r\n    {alerta ? (<div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>) :null }\r\n            <div className=\"contenedor-form sombra-dark\">\r\n                <h1>Registra tus datos</h1>\r\n                <i className=\"login-icons far fa-id-badge\"></i>\r\n\r\n                <form\r\n                    onSubmit={onSubmit}\r\n                >\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"nombre\">Nombre<i className=\"fas fa-user-tag\"></i></label>\r\n                        <input \r\n                        type=\"text\"\r\n                        id=\"nombre\"\r\n                        name=\"nombre\"\r\n                        value={nombre}\r\n                        placeholder=\"Tu nombre\"\r\n                        onChange={onChange}\r\n                        >\r\n                        </input>\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"email\">Correo<i className=\"fas fa-at\"></i></label>\r\n                        <input \r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        placeholder=\"Tu email\"\r\n                        onChange={onChange}\r\n                        >\r\n                        </input>\r\n                    </div>\r\n                    \r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"password\">Contraseña <i className=\"fas fa-lock\"></i></label>\r\n                        <input \r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        value={password}\r\n                        name=\"password\"\r\n                        placeholder=\"Tu password\"\r\n                        onChange={onChange}\r\n                        >\r\n                        </input>\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"password\">Repetir contraseña <i className=\"fas fa-user-shield\"></i></label>\r\n                        <input \r\n                        type=\"password\"\r\n                        id=\"confirmar\"\r\n                        value={confirmar}\r\n                        name=\"confirmar\"\r\n                        placeholder=\"Repite tu contraseña\"\r\n                        onChange={onChange}\r\n                        >\r\n                        </input>\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <input type=\"submit\" className=\" btn btn-primario- btn-block\"\r\n                        value=\"Guardar\"\r\n                        >\r\n                        \r\n                        \r\n                        </input>\r\n                    </div>\r\n\r\n                </form>\r\n\r\n                <Link to={'/'} className=\"enlace-cuenta\">\r\n                    Volver uwu\r\n                </Link>\r\n\r\n            </div>\r\n        </div>\r\n        </Animated>\r\n    );\r\n}\r\n\r\nexport default Register;","import {createContext} from 'react';\r\n\r\nconst proyectoContext = createContext();\r\n\r\nexport default proyectoContext;\r\n","import React, {Fragment, useState, useContext} from 'react';\r\nimport ProyectoContext from '../../context/proyectos/proyectoContext';\r\nconst NuevoProyecto = () =>{\r\n\r\n    //Obtener el state del formulario\r\n    const proyectosContext = useContext(ProyectoContext);\r\n    const { formulario,\r\n            errorformulario,\r\n            mostrarFormulario,\r\n            agregarProyecto,\r\n            mostrarError } \r\n            = proyectosContext;\r\n\r\n    //State para proyecto\r\n    const [proyecto, guardarProyecto] = useState({\r\n        nombre: ''\r\n    });\r\n\r\n    //Extraer nombre del proyecto\r\n    const{ nombre } = proyecto;\r\n\r\n    const onChangeProyecto = e =>{\r\n        guardarProyecto({\r\n            ...proyecto,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmitProyecto = e =>{\r\n        e.preventDefault();\r\n        \r\n\r\n        //Validar proyecto\r\n        if(nombre === ''){\r\n            mostrarError();\r\n            return;\r\n        }\r\n            \r\n        \r\n        //Agregar al state\r\n        agregarProyecto(proyecto);\r\n        //Reiniciar el form\r\n        guardarProyecto({\r\n            nombre:''\r\n        })\r\n    }\r\n\r\n    const onClickForm = () =>{\r\n        mostrarFormulario();\r\n\r\n\r\n    }\r\n    return(\r\n        <Fragment>\r\n        <button\r\n            type=\"button\"\r\n            className=\"btn btn-block btn-primario\"\r\n            onClick={onClickForm}\r\n        >Nuevo Proyecto</button>\r\n\r\n            \r\n                \r\n            { formulario ? (\r\n                <form\r\n                className= \"formulario-nuevo-proyecto\"\r\n                onSubmit={onSubmitProyecto}\r\n            >\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"input-text\"\r\n                    placeholder=\"Nombre Proyecto\"\r\n                    name=\"nombre\"\r\n                    onChange={onChangeProyecto}\r\n                    value={nombre}\r\n                >\r\n                </input>\r\n    \r\n                <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primario btn-block\"\r\n                    value=\"Agregar Proyecto\"\r\n                ></input>\r\n            </form>\r\n         \r\n            )\r\n                : null\r\n        }\r\n            \r\n             \r\n        {errorformulario ? <p className=\"mensaje error\">El nombre del\r\n        proyecto es obligatorio</p>\r\n            : null\r\n        }\r\n        </Fragment> \r\n    );\r\n    }\r\n\r\nexport default NuevoProyecto;","import {createContext} from 'react';\r\n \r\nconst TareaContext = createContext();\r\n\r\nexport default TareaContext;","import React,{useContext} from 'react';\r\nimport ProyectoContext from '../../context/proyectos/proyectoContext';\r\nimport TareaContext from '../../context/tareas/tareaContext';\r\n\r\n\r\nconst Proyecto = ({proyecto}) =>{\r\n    \r\n    //Obtener el state de proyectos\r\n    const proyectoContext = useContext(ProyectoContext);\r\n    const { proyectoActual } = proyectoContext;\r\n\r\n    //Obtener el state de tareas\r\n    const tareaContext = useContext(TareaContext);\r\n    const { obtenerTareas } = tareaContext;\r\n\r\n    //Funcion para agregar el proyecto actual\r\n    const seleccionarProyecto = id =>{\r\n        proyectoActual(id); //Fijar un proyecto actual\r\n        obtenerTareas(id); //Filtra las tareas\r\n    }\r\n\r\n    return(\r\n        <li>\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-blank\"\r\n                onClick={()=>seleccionarProyecto(proyecto._id)}\r\n            >\r\n                {proyecto.nombre}\r\n            </button>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Proyecto;","import React, { useContext, useEffect } from 'react';\r\nimport Proyecto from './Proyecto';\r\nimport ProyectoContext from '../../context/proyectos/proyectoContext';\r\nimport AlertaConext from '../../context/validacion/alertaContext';\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group'\r\n\r\n\r\nconst ListadoProyectos = () =>{\r\n    \r\n\r\n\r\n    const proyectoContext = useContext(ProyectoContext);\r\n    const {proyectos, mensaje, obtenerProyectos} = proyectoContext;\r\n    \r\n    const alertaContext = useContext(AlertaConext);\r\n    const {alerta, mostrarAlerta} = alertaContext;\r\n    //Obtener objetos cuando carga el componente\r\n    //Nunca debe haber un return por encima\r\n    //Del useEffect\r\n    \r\n    useEffect(()=>{\r\n\r\n        if(mensaje){\r\n            //Acá, en vez de poner un código html\r\n            //que muestre la alerta, se agrega la función\r\n            //de sweetalert para mostrar el error\r\n            mostrarAlerta(mensaje.msg, `mensaje ${mensaje.categoria}`)\r\n        }\r\n        obtenerProyectos();\r\n    },[mensaje])\r\n    \r\n    if(proyectos.length === 0) return <p>No hay proyectos, prueba agregando uno uwu</p>;\r\n\r\n\r\n    return(\r\n        <ul className=\"listado-proyectos\">\r\n            \r\n    {alerta ?(<div className= {`alerta ${alerta.categoria}`}>{alerta.msg}</div>) : null}\r\n\r\n            <TransitionGroup>\r\n            {proyectos.map(proyecto=>(\r\n               <CSSTransition\r\n                key={proyecto._id}\r\n                timeout={300}\r\n                classNames=\"proyecto\"\r\n               >\r\n                    <Proyecto\r\n                    proyecto={proyecto}\r\n                ></Proyecto>\r\n               </CSSTransition>\r\n            ))}\r\n            </TransitionGroup>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default ListadoProyectos;\r\n","import React from 'react';\r\nimport NuevoProyecto from '../proyectos/NuevoProyecto';\r\nimport ListadoProyectos from '../proyectos/ListadoProyectos';\r\n\r\n\r\n\r\nconst Sidebar = () =>{\r\n    return(\r\n        <aside>\r\n            <h1>MERN<span>Tasks</span></h1>\r\n            <NuevoProyecto></NuevoProyecto>\r\n            <div className=\"proyectos\">\r\n                <h2>Tus Proyectos</h2>\r\n                <ListadoProyectos>\r\n                    \r\n                </ListadoProyectos>\r\n            </div>\r\n        </aside>\r\n    );\r\n}\r\n\r\nexport default Sidebar\r\n","import React, {useContext, useEffect} from 'react';\r\nimport AuthConext from '../../context/autenticacion/authContext';\r\n\r\n\r\nconst Barra = () =>{\r\n     //Extraer la información de autenticación\r\n     const authContext = useContext(AuthConext);\r\n     const {usuario, usuarioAutenticado, cerrarSesion} = authContext;\r\n\r\n     useEffect(() => {\r\n        usuarioAutenticado();\r\n        //eslint-disable-next-line\r\n    }, []);\r\n    return(\r\n        <header className=\"app-header\">\r\n          {usuario ?   <p className=\"nombre-usuario\">Hola <span>{usuario.nombre}</span></p> : null}\r\n            <nav className=\"nav-principal\">\r\n                <button \r\n                className=\"btn btn-blank cerrar-sesion\"\r\n                onClick={()=>cerrarSesion()}\r\n                >Cerrar Sesión\r\n                </button>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Barra;","import React,{useContext, useState, useEffect} from 'react';\r\nimport ProyectoContext from '../../context/proyectos/proyectoContext';\r\nimport TareaContext from '../../context/tareas/tareaContext';\r\n\r\n\r\nconst FormTarea = () =>{\r\n\r\n        //Extraer si un proyecto está activo\r\n        const proyectosContext = useContext(ProyectoContext);\r\n        const { proyecto } = proyectosContext;\r\n\r\n        //Obtener el state de tareas\r\n        const tareaContext = useContext(TareaContext);\r\n        const { tareaseleccionada,\r\n                errortarea,\r\n                agregarTarea,\r\n                validarTarea,\r\n                obtenerTareas,\r\n                actualizarTarea,\r\n                limpiarTarea\r\n             } = tareaContext;\r\n        \r\n        //Effect que detecta si hay una tarea seleccionada para editar\r\n        useEffect(()=>{\r\n            if(tareaseleccionada !==null ){\r\n                guardarTarea(tareaseleccionada)\r\n            }\r\n            else{\r\n                guardarTarea({\r\n                    nombre: ''\r\n                })\r\n            }\r\n        },[tareaseleccionada]);\r\n\r\n        //State del formulario\r\n        const [tarea, guardarTarea] = useState({\r\n            nombre:''\r\n        })\r\n\r\n        //Extraer el nombre del proyecto\r\n        const{ nombre } = tarea;\r\n\r\n        //Leer los valores\r\n        const handleChange = e =>{\r\n            guardarTarea({\r\n                ...tarea,\r\n                [e.target.name] : e.target.value\r\n            })\r\n        }\r\n\r\n        if(!proyecto) return null;\r\n\r\n        \r\n        const [proyectoActual] = proyecto;\r\n    \r\n        const onSubmit = e =>{\r\n            e.preventDefault();\r\n\r\n            //validar\r\n            if(nombre.trim() === ''){\r\n                validarTarea();\r\n                return;\r\n            }\r\n            \r\n            if(tareaseleccionada === null){\r\n                //agregar la nueva tarea al state\r\n                tarea.proyecto=proyectoActual._id;\r\n                agregarTarea(tarea);\r\n            }\r\n            else{\r\n                //Actualiza\r\n                actualizarTarea(tarea);\r\n                limpiarTarea();\r\n            }\r\n             \r\n            //Obtener y filtrar las tareas del proyecto actual\r\n            obtenerTareas(proyectoActual._id);\r\n            \r\n            //reiniciar el form\r\n            guardarTarea({\r\n                nombre:''\r\n            })\r\n        }\r\n        return(\r\n        <div className=\"formulario\">\r\n            <form\r\n                onSubmit={onSubmit}\r\n            >\r\n                <div className=\"contenedor-input\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"input-text\"\r\n                        placeholder=\"Nombre Tarea...\"\r\n                        name=\"nombre\"\r\n                        onChange={handleChange}\r\n                        value={nombre}\r\n                    >\r\n                    \r\n                    </input>\r\n                </div>\r\n                <div className=\"contenedor-input\">\r\n                    <input\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primario btn-submit btn-block\"\r\n                        value={tareaseleccionada ? 'Editar Tarea' : 'Agregar Tarea'}\r\n                    >\r\n                    </input>\r\n                </div>    \r\n            </form>\r\n            {errortarea ?<p className=\"mensaje error\">El nombre de la tarea es obligatorio</p> :null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormTarea;\r\n","import React,{useContext} from 'react';\r\nimport TareaContext from '../../context/tareas/tareaContext';\r\nimport ProyectoContext from '../../context/proyectos/proyectoContext';\r\n\r\nconst Tarea = ({tarea}) =>{\r\n\r\n    //Obtener el state de proyectos\r\n    const proyectoContext = useContext(ProyectoContext);\r\n    const { proyecto } = proyectoContext;\r\n\r\n    //Extraer el proyecto\r\n    const [proyectoActual] = proyecto;\r\n\r\n    //Obtener el state de tareas\r\n    const tareaContext = useContext(TareaContext);\r\n    const { eliminarTarea, obtenerTareas,actualizarTarea, guardarTareaActual } = tareaContext;\r\n\r\n    //Funcion que se ejecuta cuando eliminar\r\n\r\n    const tareaEliminar = id =>{\r\n        eliminarTarea(id, proyectoActual._id);\r\n        obtenerTareas(proyectoActual._id);\r\n    }\r\n\r\n    //Funcion que modifica el estado\r\n    const cambiarEstado = tarea =>{\r\n        if(tarea.estado){\r\n            tarea.estado = false;\r\n        }\r\n        else{\r\n            tarea.estado = true;\r\n        }\r\n        actualizarTarea(tarea);\r\n    }\r\n    //Agrega una tarea actual cuando el usuario desea editarla\r\n\r\n    const seleccionarTarea = tarea =>{\r\n        guardarTareaActual(tarea);\r\n    }\r\n    return(\r\n        <li className=\"tarea sombra\">\r\n            <p>{tarea.nombre}</p>\r\n\r\n            <div className=\"estado\">\r\n                {\r\n                    tarea.estado\r\n                    ?(\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"completo\"\r\n                            onClick={()=>cambiarEstado(tarea)}\r\n                        >Completo</button>\r\n                    )\r\n\r\n                    :(\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"incompleto\"\r\n                            onClick={()=>cambiarEstado(tarea)}\r\n                        >Incompleto</button>\r\n                    )\r\n                }\r\n            </div>\r\n\r\n            <div className=\"acciones\">\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primario\"\r\n                    onClick={()=> seleccionarTarea(tarea) }\r\n                >\r\n                    Editar\r\n                </button>\r\n\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secundario\"\r\n                    onClick={()=>tareaEliminar(tarea._id)}\r\n                >\r\n                    Eliminar\r\n                </button>\r\n            </div>\r\n        </li>    \r\n    );\r\n}\r\n\r\nexport default Tarea;\r\n","import React,{Fragment, useContext} from 'react';\r\nimport Tarea from '../tareas/Tarea';\r\nimport ProyectoContext from '../../context/proyectos/proyectoContext';\r\nimport TareaContext from '../../context/tareas/tareaContext';\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group'\r\n\r\n\r\nconst ListadoTareas = () =>{\r\n\r\n    //Obtener el state de proyectos\r\n    const proyectosContext = useContext(ProyectoContext);\r\n    const { proyecto, eliminarProyecto } = proyectosContext;\r\n\r\n    //Obtener el state de tareas\r\n    const tareaContext = useContext(TareaContext);\r\n    const { tareasproyecto } = tareaContext;\r\n\r\n    //si no hay proyecto seleccionado\r\n    if(!proyecto) return <h2>Selecciona un proyecto</h2>\r\n\r\n    \r\n\r\n    //Array destructuring para extraer el proyecto actual\r\n    const [proyectoActual] = proyecto;\r\n    \r\n    //Elimina un proyecto\r\n    const onClickEliminar = () =>{\r\n        eliminarProyecto(proyectoActual._id)\r\n    }\r\n    \r\n    return(\r\n        <Fragment>\r\n        <h2>Proyecto: {proyectoActual.nombre}</h2>\r\n\r\n        <ul className=\"listado-tareas\">\r\n            {tareasproyecto.length === 0\r\n                ? (<li className=\"tarea\"><p>No hay tareas</p></li>)\r\n                : <TransitionGroup\r\n                >\r\n                {tareasproyecto.map(tarea =>(\r\n                    <CSSTransition\r\n                    key={tarea._id}\r\n                    timeout={300}\r\n                    classNames=\"tarea\"\r\n                    >\r\n                        <Tarea\r\n                    tarea = {tarea}\r\n                    >\r\n\r\n                    </Tarea>\r\n                    </CSSTransition>\r\n                ))}\r\n                </TransitionGroup>\r\n            }\r\n        </ul>\r\n\r\n        <button\r\n            type = \"button\"\r\n            className=\"btn btn-eliminar\"\r\n            onClick={onClickEliminar}\r\n        >\r\n            Eliminar Proyecto &times;\r\n        </button>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ListadoTareas;","import React,{useContext, useEffect} from \"react\";\r\nimport Sidebar from \"../layout/Sidebar\";\r\nimport Barra from \"../layout/Barra\"\r\nimport FormTarea from \"../tareas/FormTarea\";\r\nimport ListadoTareas from \"../tareas/ListadoTareas\";\r\nimport AuthConext from '../../context/autenticacion/authContext';\r\n\r\n\r\n\r\nconst Proyectos = () =>{\r\n\r\n    //Extraer la información de autenticación\r\n    const authContext = useContext(AuthConext);\r\n    const {usuarioAutenticado} = authContext;\r\n\r\n    useEffect(() => {\r\n        usuarioAutenticado();\r\n        //eslint-disable-next-line\r\n    }, []);\r\n\r\n    return(\r\n        <div className=\"contenedor-app\">\r\n          \r\n          <Sidebar></Sidebar>\r\n\r\n            <div className=\"seccion-principal\">\r\n                <Barra></Barra>\r\n                <main>\r\n                    <FormTarea></FormTarea>\r\n                    <div className=\"contenedor-tareas\">\r\n                        <ListadoTareas></ListadoTareas>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Proyectos;","import React, {useContext, useEffect} from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\nconst RutaPrivada = ({ component: Component, ...props }) =>{\r\n    \r\n    const authConext = useContext(AuthContext);\r\n    const { autenticado,cargando, usuarioAutenticado } = authConext;\r\n\r\n    useEffect(() => {\r\n        usuarioAutenticado();\r\n        //eslint-disable-next-line\r\n    }, [])\r\n    return(\r\n        <Route\r\n            {...props} render={props=>!autenticado && !cargando? (\r\n                <Redirect to=\"/\" />\r\n\r\n            ) : (\r\n                <Component {...props} />\r\n            ) }\r\n        >\r\n\r\n        </Route>\r\n    );\r\n}\r\n\r\nexport default RutaPrivada;","import {\r\n    FORMULARIO_PROYECTO,\r\n    OBTENER_PROYECTOS,\r\n    AGREGAR_PROYECTO,\r\n    PROYECTO_ERROR,\r\n    VALIDAR_FORMULARIO,\r\n    PROYECTO_ACTUAL,\r\n    ELIMINAR_PROYECTO\r\n\r\n} \r\nfrom '../../types';\r\n\r\n\r\n\r\n\r\nexport default(state,action) =>{\r\n    switch(action.type) {\r\n        case FORMULARIO_PROYECTO:\r\n            return{\r\n                ...state,\r\n                formulario: true\r\n            }\r\n        case OBTENER_PROYECTOS:\r\n            return{\r\n                ...state,\r\n                proyectos: action.payload\r\n            }\r\n        case AGREGAR_PROYECTO:\r\n            return{\r\n                ...state,\r\n                proyectos: [...state.proyectos, action.payload],\r\n                formulario:false,\r\n                errorformulario: false\r\n            }\r\n        case VALIDAR_FORMULARIO:\r\n            return{\r\n                ...state,\r\n                errorformulario: true\r\n            }\r\n        case PROYECTO_ACTUAL:\r\n            return{\r\n                ...state,\r\n                proyecto: state.proyectos.filter(proyecto => proyecto._id === action.payload)\r\n            }\r\n        case ELIMINAR_PROYECTO:\r\n            return{\r\n                ...state,\r\n                proyectos: state.proyectos.filter(proyecto => proyecto._id !== action.payload),\r\n                proyecto: null\r\n                \r\n            }\r\n        case PROYECTO_ERROR:\r\n            return{\r\n                ...state,\r\n                mensaje: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","export const FORMULARIO_PROYECTO = 'FORMULARIO_PROYECTO';\r\nexport const OBTENER_PROYECTOS = 'OBTENER_PROYECTOS';\r\nexport const AGREGAR_PROYECTO = 'AGREGAR_PROYECTO';\r\nexport const VALIDAR_FORMULARIO = 'VALIDAR_FORMULARIO';\r\nexport const PROYECTO_ACTUAL = 'PROYECTO_ACTUAL';\r\nexport const ELIMINAR_PROYECTO = 'ELIMINAR_PROYECTO';\r\nexport const PROYECTO_ERROR = 'PROYECTO_ERROR'\r\n\r\nexport const TAREAS_PROYECTO = 'TAREAS_PROYECTO';\r\nexport const AGREGAR_TAREA = 'AGREGAR_TAREA';\r\nexport const VALIDAR_TAREA = 'VALIDAR_TAREA';\r\nexport const ELIMINAR_TAREA = 'ELIMINAR_TAREA';\r\nexport const TAREA_ACTUAL = 'TAREA_ACTUAL';\r\nexport const ACTUALIZAR_TAREA = 'ACTUALIZAR_TAREA';\r\nexport const LIMPIAR_TAREA = 'LIMPIAR_TAREA';\r\n\r\nexport const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA';\r\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA';\r\n\r\n\r\nexport const REGISTRO_EXITOSO = 'REGISTRO_EXITOSO';\r\nexport const REGISTRO_ERROR = 'REGISTRO_ERROR';\r\nexport const OBTENER_USUARIO = 'OBTENER_USUARIO';\r\nexport const LOGIN_EXITOSO = 'LOGIN_EXITOSO';\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\nexport const CERRAR_SESION= 'CERRAR_SESION';\r\n","import axios from 'axios';\r\n\r\nconst clienteAxios = axios.create({\r\n    baseURL : process.env.REACT_APP_BACKEND_URL\r\n});\r\n\r\nexport default clienteAxios;","import React,{useReducer} from 'react';\r\n\r\nimport proyectoContext from './proyectoContext';\r\nimport proyectoReducer from './proyectoReducer';\r\nimport {FORMULARIO_PROYECTO,\r\n        OBTENER_PROYECTOS,\r\n        AGREGAR_PROYECTO,\r\n        PROYECTO_ERROR,\r\n        VALIDAR_FORMULARIO,\r\n        PROYECTO_ACTUAL,\r\n        ELIMINAR_PROYECTO,\r\n        \r\n} \r\nfrom '../../types';\r\n\r\nimport clienteAxios from '../../config/axios';\r\n\r\n\r\n\r\nconst ProyectoState = props =>{\r\n\r\n    const initialState = {\r\n        proyectos : [],\r\n        formulario : false,\r\n        errorformulario: false,\r\n        proyecto: null,\r\n        mensaje: null\r\n    }\r\n\r\n    //Dispatch para ejecutar las acciones\r\n    const [state, dispatch] = useReducer(proyectoReducer, initialState);\r\n\r\n    //Serie de funciones para el CRUD\r\n    const mostrarFormulario = () =>{\r\n        dispatch({\r\n            type: FORMULARIO_PROYECTO\r\n        })\r\n    }\r\n    //Obtener los proyectos\r\n    const obtenerProyectos = async () =>{\r\n        let alerta;\r\n        try {\r\n            const resultado = await clienteAxios.get('/api/proyectos');\r\n            console.log(resultado.data.proyectos); \r\n            dispatch({\r\n                type: OBTENER_PROYECTOS,\r\n                payload: resultado.data.proyectos\r\n            })\r\n        } catch (error) {\r\n            alerta = {\r\n                msg: 'Hubo un error',\r\n                categoria: 'alerta-error'\r\n            }\r\n            dispatch({\r\n                type: PROYECTO_ERROR,\r\n                payload: alerta\r\n            })\r\n        }\r\n    }\r\n\r\n    //Agregar un nuevo proyecto\r\n    const agregarProyecto = async proyecto =>{\r\n        let alerta;\r\n        try {\r\n            const resultado = await clienteAxios.post('/api/proyectos', proyecto);\r\n            //Inserta el proyecto al state\r\n            dispatch({\r\n                type: AGREGAR_PROYECTO,\r\n                payload: resultado.data.proyecto\r\n            })\r\n        } catch (error) {\r\n            alerta = {\r\n                msg: 'Hubo un error',\r\n                categoria: 'alerta-error'\r\n            }\r\n            dispatch({\r\n                type: OBTENER_PROYECTOS,\r\n                payload: alerta\r\n            })\r\n        }\r\n    }\r\n    //Valida el formulario por errores\r\n    const mostrarError = () =>{\r\n        dispatch({\r\n            type: VALIDAR_FORMULARIO\r\n        })\r\n    }\r\n\r\n    //Selecciona el proyecto que usuario da click\r\n    const proyectoActual = proyectoId =>{\r\n        dispatch({\r\n            type: PROYECTO_ACTUAL,\r\n            payload: proyectoId\r\n        })\r\n    }\r\n    //Elimina un proyecto\r\n    const eliminarProyecto = async proyectoId =>{\r\n        let alerta;\r\n        try {\r\n            await clienteAxios.delete(`/api/proyectos/${proyectoId}`);\r\n            dispatch({\r\n                type: ELIMINAR_PROYECTO,\r\n                payload: proyectoId\r\n            })\r\n        } catch (error) {\r\n            alerta = {\r\n                msg: 'Hubo un error',\r\n                categoria: 'alerta-error'\r\n            }\r\n            dispatch({\r\n                type: OBTENER_PROYECTOS,\r\n                payload: alerta\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        <proyectoContext.Provider\r\n            value={{\r\n                proyectos: state.proyectos,\r\n                formulario: state.formulario,\r\n                errorformulario: state.errorformulario,\r\n                proyecto: state.proyecto,\r\n                mensaje: state.mensaje,\r\n                mostrarFormulario,\r\n                obtenerProyectos,\r\n                agregarProyecto,\r\n                mostrarError,\r\n                proyectoActual,\r\n                eliminarProyecto\r\n            }}\r\n        >\r\n            {props.children}\r\n        </proyectoContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport default ProyectoState;\r\n","import {\r\n    TAREAS_PROYECTO,\r\n    AGREGAR_TAREA,\r\n    VALIDAR_TAREA,\r\n    ELIMINAR_TAREA,\r\n    TAREA_ACTUAL,\r\n    ACTUALIZAR_TAREA,\r\n    LIMPIAR_TAREA\r\n} from '../../types';\r\n\r\n\r\nexport default(state, action) =>{\r\n    switch(action.type){\r\n\r\n        case TAREAS_PROYECTO:\r\n            return{\r\n                ...state,\r\n                tareasproyecto: action.payload\r\n            }\r\n        case AGREGAR_TAREA:\r\n            return{\r\n                ...state,\r\n                tareasproyecto: [action.payload , ...state.tareasproyecto],\r\n                errortarea: false\r\n            }\r\n        case VALIDAR_TAREA:\r\n            return{\r\n                ...state,\r\n                errortarea: true\r\n            }\r\n        case ELIMINAR_TAREA:\r\n            return{\r\n                ...state,\r\n                tareasproyecto: state.tareasproyecto.filter(tarea=> tarea._id !== action.payload)\r\n            }\r\n        case ACTUALIZAR_TAREA:\r\n            return{\r\n                ...state,\r\n                tareasproyecto: state.tareasproyecto.map(tarea => tarea._id === action.payload._id ? action.payload : tarea)\r\n            }\r\n        case TAREA_ACTUAL:\r\n            return{\r\n                ...state,\r\n                tareaseleccionada: action.payload\r\n            }\r\n        case LIMPIAR_TAREA:\r\n            return{\r\n                ...state,\r\n                tareaseleccionada: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React,{useReducer} from 'react';\r\nimport TareaContext from './tareaContext';\r\nimport TareaReducer from './tareaReducer';\r\nimport clienteAxios from '../../config/axios';\r\n\r\nimport {\r\n    TAREAS_PROYECTO,\r\n    AGREGAR_TAREA,\r\n    VALIDAR_TAREA,\r\n    ELIMINAR_TAREA,\r\n    TAREA_ACTUAL,\r\n    ACTUALIZAR_TAREA,\r\n    LIMPIAR_TAREA\r\n} from '../../types';\r\n\r\nconst TareaState = props =>{\r\n    const initialState = {\r\n        tareasproyecto: [],\r\n        errortarea: false,\r\n        tareaseleccionada: null\r\n    }\r\n\r\n    //Crear dispatch y state\r\n    const [state, dispatch] = useReducer(TareaReducer, initialState);\r\n\r\n    //Funciones CRUD\r\n\r\n    //Obtener las tareas de un proyecto\r\n    const obtenerTareas =async proyecto =>{\r\n        try {\r\n            const resultado = await clienteAxios.get('/api/tareas',{params:{proyecto}});\r\n            // console.log(resultado);\r\n            dispatch({\r\n                type: TAREAS_PROYECTO,\r\n                payload: resultado.data.tareas\r\n            });\r\n        } \r\n        catch (error) {\r\n            console.log(error.response);\r\n        }\r\n    }\r\n    //Agregar una tarea al proyecto seleccionado\r\n    const agregarTarea = async tarea =>{\r\n       console.log(tarea);\r\n        try {\r\n           const resultado = await clienteAxios.post('/api/tareas', tarea);\r\n           console.log(resultado);\r\n           dispatch({\r\n            type:AGREGAR_TAREA,\r\n            payload: tarea\r\n        })\r\n       } catch (error) {\r\n           console.log(error);\r\n       }\r\n    }\r\n    //Valida y muestra un errorr en caso que sea necesario\r\n    const validarTarea = () =>{\r\n        dispatch({\r\n            type: VALIDAR_TAREA\r\n        })\r\n    }\r\n    //Eliminar tarea x id\r\n    const eliminarTarea = async (id, proyecto) =>{\r\n        try {\r\n           await clienteAxios.delete(`/api/tareas/${id}`, {params: {proyecto}});\r\n            dispatch({\r\n                type: ELIMINAR_TAREA,\r\n                payload: id\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n     //Edita una tarea\r\n     const actualizarTarea = async tarea =>{\r\n        try {\r\n            const resultado = await clienteAxios.put(`/api/tareas/${tarea._id}`, tarea)\r\n            console.log(resultado);\r\n            dispatch({\r\n                type: ACTUALIZAR_TAREA,\r\n                payload: resultado.data.tarea \r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    //Limpia la tarea de la selección\r\n    //Para reiniciar formulario\r\n    const limpiarTarea = () =>{\r\n        dispatch({\r\n            type:LIMPIAR_TAREA\r\n        })\r\n    }\r\n\r\n    //eXTRAE UNA TAREA PARA EDICIÓN\r\n    const guardarTareaActual = tarea =>{\r\n        dispatch({\r\n            type: TAREA_ACTUAL,\r\n            payload: tarea\r\n        })\r\n    }\r\n\r\n   \r\n    return(\r\n        <TareaContext.Provider\r\n            value={{\r\n                tareasproyecto : state.tareasproyecto,\r\n                errortarea : state.errortarea,\r\n                tareaseleccionada: state.tareaseleccionada,\r\n                obtenerTareas,\r\n                agregarTarea,\r\n                validarTarea,\r\n                eliminarTarea,\r\n                guardarTareaActual,\r\n                actualizarTarea,\r\n                limpiarTarea\r\n            }}\r\n        >\r\n            {props.children}\r\n        </TareaContext.Provider>\r\n    )\r\n}\r\n\r\nexport default TareaState;\r\n","import {MOSTRAR_ALERTA,\r\n        OCULTAR_ALERTA\r\n} from '../../types';\r\n\r\n\r\nexport default (state, action) =>{\r\n    switch(action.type){\r\n        case MOSTRAR_ALERTA:\r\n            return{\r\n                alerta: action.payload\r\n            }\r\n        case OCULTAR_ALERTA:\r\n            return{\r\n                alerta : null\r\n            }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","import React, {useReducer} from 'react';\r\nimport alertaReducer from './alertaReducer';\r\nimport alertaContext from './alertaContext';\r\n\r\n\r\nimport {MOSTRAR_ALERTA,\r\n    OCULTAR_ALERTA\r\n} from '../../types';\r\n\r\nconst AlertaState = props =>{\r\n\r\n    const initialState = {\r\n        alerta: null\r\n    }\r\n\r\n    const[state, dispatch] = useReducer(alertaReducer, initialState);\r\n\r\n    //Funciones\r\n    const mostrarAlerta = (msg, categoria) =>{\r\n        dispatch({\r\n            type: MOSTRAR_ALERTA,\r\n            payload: {msg, categoria}\r\n        });\r\n\r\n        setTimeout(()=>{\r\n            dispatch({\r\n                type: OCULTAR_ALERTA\r\n            })\r\n        }, 5000);\r\n    }\r\n\r\n    return(\r\n        <alertaContext.Provider\r\n            value={{\r\n                alerta: state.alerta,\r\n                mostrarAlerta\r\n            }}\r\n        >\r\n            {props.children}\r\n        </alertaContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AlertaState;","import {\r\n    REGISTRO_EXITOSO,\r\n    REGISTRO_ERROR,\r\n    OBTENER_USUARIO,\r\n    LOGIN_EXITOSO,\r\n    LOGIN_ERROR,\r\n    CERRAR_SESION\r\n} from '../../types';\r\n\r\nexport default (state, action) =>{\r\n    switch(action.type){\r\n        case LOGIN_EXITOSO:\r\n        case REGISTRO_EXITOSO:\r\n            localStorage.setItem('token', action.payload);\r\n            return{\r\n                ...state,\r\n                autenticado: true,\r\n                mensaje: null,\r\n                cargando : false\r\n            }\r\n        case OBTENER_USUARIO:\r\n            return{\r\n                ...state,\r\n                autenticado: true,\r\n                usuario: action.payload,\r\n                cargando: false\r\n            }\r\n        case CERRAR_SESION:\r\n        case LOGIN_ERROR:\r\n        case REGISTRO_ERROR:\r\n            localStorage.removeItem('token');\r\n            return{\r\n                ...state,\r\n                token: null,\r\n                mensaje: action.payload,\r\n                usuario: null,\r\n                autenticado: null,\r\n                cargando: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import clienteAxios from './axios';\r\n\r\nconst tokenAuth = token =>{\r\n    if(token){\r\n        clienteAxios.defaults.headers.common['x-auth-token'] = token;\r\n    }\r\n    else{\r\n        delete clienteAxios.defaults.headers.common['x-auth-token'];\r\n    }\r\n}\r\n\r\nexport default tokenAuth;","import React, {useReducer} from 'react';\r\nimport AuthContext from './authContext';\r\nimport AuthReducer from './authReducer';\r\nimport clienteAxios from '../../config/axios';\r\nimport tokenAuth from '../../config/tokenAuth';\r\n\r\nimport {\r\n    REGISTRO_EXITOSO,\r\n    REGISTRO_ERROR,\r\n    OBTENER_USUARIO,\r\n    LOGIN_EXITOSO,\r\n    LOGIN_ERROR,\r\n    CERRAR_SESION\r\n} from '../../types';\r\n\r\nconst AuthState = props =>{\r\n    const initialState={\r\n        token: localStorage.getItem('token'),\r\n        autenticado: null,\r\n        usuario: null,\r\n        mensaje: null,\r\n        cargando: true\r\n    }\r\n    const [state, dispatch] = useReducer(AuthReducer, initialState);\r\n\r\n    //Funciones\r\n\r\n    const registrarUsuario = async datos =>{\r\n        let alerta;\r\n        try {\r\n            const respuesta = await clienteAxios.post('/api/usuarios', datos);\r\n            dispatch({\r\n                type:REGISTRO_EXITOSO,\r\n                payload: respuesta.data.token\r\n            })\r\n         \r\n        //Obtener el usuario\r\n        usuarioAutenticado();\r\n    }\r\n        catch (error) {\r\n            // console.log(error.response.data.msg);\r\n             alerta = {\r\n                msg: error.response.data.msg,\r\n                categoria: `alerta alerta-error`\r\n            }\r\n\r\n            dispatch({\r\n                type: REGISTRO_ERROR,\r\n                payload: alerta\r\n            })\r\n        }\r\n    }\r\n\r\n    //Retorna el usuario autenticado \r\n    const usuarioAutenticado = async () =>{\r\n        const token = localStorage.getItem('token');\r\n        if(token){\r\n            tokenAuth(token);\r\n        }\r\n        try {\r\n            const respuesta = await clienteAxios.get('/api/auth');\r\n            dispatch({\r\n                type: OBTENER_USUARIO,\r\n                payload: respuesta.data.usuario\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch({\r\n                type: LOGIN_ERROR\r\n            })\r\n        }\r\n    }\r\n    //Cuando el usuario inicia sesión\r\n    const iniciarSesion = async datos =>{\r\n        let alerta\r\n        try {\r\n            const respuesta = await clienteAxios.post('/api/auth', datos);\r\n            dispatch({\r\n                type: LOGIN_EXITOSO,\r\n                payload: respuesta.data.token\r\n            });\r\n        //Obtener el usuario\r\n        usuarioAutenticado();\r\n        } catch (error) {\r\n            console.log(error.response.data.msg);\r\n            alerta = {\r\n                msg: error.response.data.msg,\r\n                categoria: `alerta alerta-error`\r\n            }\r\n\r\n            dispatch({\r\n                type: LOGIN_ERROR,\r\n                payload: alerta\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    //Cierra la sesión del usuario\r\n    const cerrarSesion = () =>{\r\n        dispatch({\r\n            type: CERRAR_SESION\r\n        })\r\n    }\r\n    return(\r\n        <AuthContext.Provider\r\n            value={{\r\n                token: state.token,\r\n                autenticado : state.autenticado,\r\n                usuario: state.usuario,\r\n                mensaje : state.mensaje,\r\n                cargando: state.cargando,\r\n                registrarUsuario,\r\n                usuarioAutenticado,\r\n                iniciarSesion,\r\n                cerrarSesion    \r\n            }}\r\n        >\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthState;","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route, HashRouter} from 'react-router-dom';\n\n//Components\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport Proyectos from './components/proyectos/Proyectos';\nimport RutaPrivada from './components/ruta/RutaPrivada';\n\nimport ProyectoState from './context/proyectos/proyectoState';\nimport TareaState from './context/tareas/tareaState';\nimport AlertaState from './context/validacion/alertaState';\nimport AuthState from './context/autenticacion/authState';\nimport tokenAuth from './config/tokenAuth';\n\n//Revisar token\nconst token = localStorage.getItem('token');\nif(token){\n  tokenAuth(token);\n}\n\nfunction App() {\n  return (\n    \n      <ProyectoState>\n        <TareaState>\n          <AlertaState>\n            <AuthState>\n              <Router>\n                <Switch>\n                <HashRouter basename={window.location.pathname || ''}>\n                  <Route exact path=\"/\" component= {Login}></Route>\n                  <Route exact path=\"/register\" component= {Register}></Route>\n                  <RutaPrivada exact path=\"/proyectos\" component= {Proyectos}></RutaPrivada>\n                </HashRouter>\n                </Switch>\n              </Router>\n            </AuthState>\n          </AlertaState>\n        </TareaState>\n      </ProyectoState>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}